datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// Modelo de User para NextAuth
model User {
  id            Int          @id @default(autoincrement())
  name          String?      // NextAuth pode usar esse campo para o nome do usuário
  email         String       @unique
  emailVerified DateTime?    // Campo opcional usado pelo NextAuth para verificar e-mails
  image         String?      // Campo opcional para armazenar a imagem do perfil do usuário
  targetAmount  Float        // Campo adicional que você adicionou para meta financeira
  investments   Investment[] // Relação com os investimentos
  accounts      Account[]    // Relação com contas de provedores de autenticação
  sessions      Session[]    // Relação com sessões do NextAuth
}

// Modelo de Investment relacionado a User
model Investment {
  id        Int      @id @default(autoincrement())
  category  String
  amount    Float
  createdAt DateTime @default(now())
  user      User?    @relation(fields: [userId], references: [id], onDelete: SetNull)
  userId    Int?
}

// Modelos obrigatórios para o NextAuth

model Account {
  id                 String   @id @default(cuid())
  userId             Int
  provider           String
  providerAccountId  String
  refresh_token      String?   @db.Text
  access_token       String?   @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?   @db.Text
  session_state      String?
  oauth_token_secret String?   @db.Text
  oauth_token        String?   @db.Text

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       Int
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
